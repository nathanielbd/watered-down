{"version":3,"sources":["gallon.png","components/Intro.jsx","components/Graph.jsx","Watered_Down_Logo.png","components/Stats.jsx","components/QRPrint.jsx","components/QRForm.jsx","components/NavBar.jsx","App.js","registerServiceWorker.js","index.js"],"names":["white","background","width","margin","float","border","Intro","state","className","Card","style","Body","Title","as","Subtitle","Text","Image","src","gallon","Button","href","Component","Simple","props","config","type","backgroundColor","borderWidth","borderColor","height","x","y","title","text","marginTop","marginLeft","fontColor","fontFamily","fontSize","fontWeight","shadow","textAlign","plot","tooltip","padding","borderRadius","animation","delay","effect","barWidth","hoverState","visible","plotarea","scaleX","values","guide","item","paddingTop","itemsOverlap","lineColor","maxItems","offsetY","tick","scaleY","rules","lineWidth","rule","alpha","lineStyle","paddingRight","maxTicks","series","styles","ref","this","chart","data","getData","url","a","fetch","response","json","Stats","isLoading","userId","userData","gallons","reduce","sum","rec","parseInt","appliances","apps","includes","concat","galPerApp","map","app","tot","setState","Spinner","Array","e","i","fluid","Accordion","val","idx","Header","Toggle","eventKey","Collapse","QRPrint","Img","variant","onClick","window","print","form","QR","id","user_id","facility","submitted","handleFacilityChange","bind","handleGallonsChange","handleSubmit","event","target","value","alert","preventDefault","Form","onSubmit","Group","controlId","Label","Control","onChange","required","placeholder","routes","path","exact","main","Home","Tab1","Tab2","Tab3","QRForm","Graph","NavigationBar","loggedin","document","basename","process","Navbar","Brand","Logo","Nav","Link","to","route","index","children","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5014d18a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gallon.e4a1883c.png\";","  \nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport gallon from '../gallon.png';\nimport Image from 'react-bootstrap/Image';\n\nconst white = {\n    background: \"#fff\",\n    width: '50rem',\n    margin: '0 auto', \n    float: 'none',\n    'margin-bottom': '10px', \n    border: '3px solid #B6DCFE'\n}\nclass Intro extends Component \n{\n    state = {  }\n    render() \n    { \n        return ( \n        <div className = 'align-items-center'>\n            <Card style={white}>\n            <Card.Body>\n                <Card.Title as =\"h1\">Welcome to Watered Down</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">A Minnehack 2021 project by William Chan, Evan Tredal, Lynh Tran, and Nathaniel Budijono</Card.Subtitle>\n                <Card.Text>\n                                Watered Down helps households meter their water usage. According to the EPA, the act of metering alone can reduce consumption by 20-40%.\n                                Our web-app allows users to easily print stickers to put on their water-consuming facilities like toilets, faucets, showers, and dishwashers. \n                                These stickers have a QR code which interfaces with our API to track the user's water usage whenever they are scanned. Users can then come here see how much water they've used by the gallon as well as over time on a graph. \n                                We hope that by visualizing water consumption users will be mindful of their water usage.\n                </Card.Text>\n                    <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                        <Image src={gallon} width =\"100em\"/>\n                <Button href=\"#https://github.com/nathanielbd/watered-down\">Check out our code!</Button>\n            </Card.Body>\n            </Card>\n        </div>\n         );\n    }\n}\nexport default Intro;","import React, { Component } from \"react\";\nimport \"zingchart/es6\";\nimport ZingChart from \"zingchart-react\";\n\nclass Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        type: 'bar',\n        backgroundColor: '#fff',\n        borderWidth: '5px',\n        borderColor: '#CDEDFD',\n        width: '96%',\n        height: '90%',\n        x: '2%',\n        y: '3%',\n      title: {\n        text: 'Water Usage Per Weekday by Gallons',\n        marginTop: '7px',\n        marginLeft: '20px',\n        backgroundColor: 'none',\n        fontColor: '#1B263B',\n        fontFamily: 'Arial',\n        fontSize: '20px',\n        fontWeight: 'bold',\n        shadow: false,\n        textAlign: 'left'\n      },\n      plot: {\n        tooltip: {\n          padding: '5px 10px',\n          backgroundColor: '#707e94',\n          borderRadius: '6px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '11px',\n          shadow: false\n        },\n        animation: {\n          delay: 500,\n          effect: 'ANIMATION_SLIDE_BOTTOM'\n        },\n        barWidth: '33px',\n        hoverState: {\n          visible: false\n        }\n      },\n      plotarea: {\n        margin: '45px 20px 38px 45px'\n      },\n      scaleX: {\n        values: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],\n        guide: {\n          visible: false\n        },\n        item: {\n          paddingTop: '2px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '15px'\n        },\n        itemsOverlap: true,\n        lineColor: '#d2dae2',\n        maxItems: 9999,\n        offsetY: '1px',\n        tick: {\n          lineColor: '#d2dae2',\n          visible: false\n        }\n      },\n      scaleY: {\n        values: '0:10000:500',\n        guide: {\n          rules: [\n            {\n              lineWidth: '0px',\n              rule: '%i == 0'\n            },\n            {\n              alpha: 0.4,\n              lineColor: '#d2dae2',\n              lineStyle: 'solid',\n              lineWidth: '1px',\n              rule: '%i > 0'\n            }\n          ]\n        },\n        item: {\n          paddingRight: '5px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '10px'\n        },\n        lineColor: 'none',\n        maxItems: 11,\n        maxTicks: 4,\n        tick: {\n          visible: false\n        }\n      },\n      series: [\n        {\n          values: [1500, 4650, 1730, 2001, 5805, 8905, 9602, 1050], \n          styles: [\n            {\n              backgroundColor: '#4dbac0'\n            },\n            {\n              backgroundColor: '#25a6f7'\n            },\n            {\n              backgroundColor: '#ad6bae'\n            },\n            {\n              backgroundColor: '#707d94'\n            },\n            {\n              backgroundColor: '#f3950d'\n            },\n            {\n              backgroundColor: '#e62163'\n            },\n            {\n              backgroundColor: '#4e74c0'\n            },\n            {\n              backgroundColor: '#9dc012'\n            }\n          ]\n        }\n      ]\n    },\n    }\n  }\n  render() {\n    return (\n      <div>\n        <ZingChart ref={this.chart} data={this.state.config} />\n      </div>\n    );\n  }\n}\n\nexport default Simple;\n","export default __webpack_public_path__ + \"static/media/Watered_Down_Logo.6d95c46e.png\";","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport gallon from '../gallon.png';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst styles = {\n  background: \"#B6DCFE\",\n}\nconst title = {\n  'font-size': \"2em\",\n}\nconst size = {\n  width: \"150px\",\n  height: \"150px\"\n}\n\nasync function getData(url) {\n\tconst response = await fetch(url);\n\treturn response.json()\n}\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n  }\n\n  async componentDidMount() {\n    const userData = await getData(`https://watered-down.zeet.app/api/user/${this.props.userId}`);\n    const gallons = userData.reduce((sum, rec) => sum + parseInt(rec.gallons), 0);\n    const appliances = userData.reduce((apps, rec) => apps.includes(rec['application_id']) ? apps : apps.concat([rec['application_id']]), []);\n    const galPerApp = appliances.map((app) => userData.reduce((tot, rec) => rec['application_id']==app ? tot+parseInt(rec['gallons']) : tot, 0));\n    this.setState({\n      gallons: gallons,\n      appliances: appliances,\n      galPerApp: galPerApp,\n      isLoading: false\n    });\n  }\n\n    render() { \n      if (this.state.isLoading) {\n        return <Spinner/>;\n      }\n        return ( \n          <div>\n            {[...Array(this.state.gallons),].map((e,i) =>{ \n              return <Image src= {gallon} fluid width = \"200\" height =\"300\"/>})}\n\n            <div style ={title}> Today's water usage is {this.state.gallons} Gallons </div>\n            <h5> Select option below to view water usage for specific appliance: </h5>\n            <div>\n        <Accordion>\n            {this.state.appliances.map((val, idx) => {\n                return (\n                    <Card style={{width: '50rem',\n                    margin: '0 auto', \n                    float: 'none',\n                    'margin-bottom': '10px',}}>\n                    <Card.Header>\n                        <Accordion.Toggle as ={Card.Header} eventKey={val}> \n                            {val}\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={val}>\n                        <Card.Body>\n                            {[...Array(this.state.galPerApp[idx]),].map((e, i) =>{ \n                                return <Image src= {gallon} fluid width = \"200\" height =\"300\"/>})}\n                            <Card.Text>\n                              You used {val} to consume {this.state.galPerApp[idx]} gallons.\n                            </Card.Text>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                    </Card>\n            )})}\n        </Accordion>\n        </div>\n          </div> );\n    }\n}\nexport default Stats;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass QRPrint extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <center>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={this.props.src}/>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.app}</Card.Title>\r\n                    <Card.Text>\r\n        Each time you use <b>{this.props.app}</b>, you consume <b>{this.props.gallons}</b> gallons of water.\r\n                    </Card.Text>\r\n                    <Button onClick={() => window.print()}>\r\n                        Print me\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n            </center>\r\n        );\r\n    }\r\n}\r\nexport default QRPrint;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport QRPrint from './QRPrint';\nimport Card from 'react-bootstrap/Card';\n\nconst form ={\n    width: \"40em\",\n    'text-align':\"center\"\n}\nclass QR extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            url: \"https://watered-down.zeet.app/api/record/\",\n            id: window.user_id,\n            facility: \"\",\n            gallons: \"\",\n            submitted: false\n        };\n\n        this.handleFacilityChange = this.handleFacilityChange.bind(this);\n        this.handleGallonsChange = this.handleGallonsChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    handleFacilityChange(event) {\n        this.setState({facility: event.target.value});\n    }\n\n    handleGallonsChange(event) {\n        this.setState({gallons: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.facility);\n        event.preventDefault();\n    }\n\n    render() {\n        if (this.state.submitted) {\n            return <QRPrint app={this.state.facility} gallons={this.state.gallons} src={`http://api.qrserver.com/v1/create-qr-code/?data=${this.state.url}?user_id=${this.state.id}%26application_id=${this.state.facility}%26gallons=${this.state.gallons}&size=200x200`}/>\n        }\n        return (\n            <Card className = 'align-items-center'style ={{ width: '50rem', margin: '0 auto', float: 'none', 'margin-bottom': '10px',}}>\n                <Card.Header as=\"h3\">   Add an Appliance!   </Card.Header>\n            <Form as='form' id='rs' onSubmit={this.handleSubmit}>\n                <Form.Group  controlId=\"appliance_id\">\n                    <Form.Label  as =\"h4\" >Choose a name for your appliance</Form.Label>\n                    <Form.Control style ={form} type=\"text\" value={this.state.facility} onChange={this.handleFacilityChange} required placeholder=\"appliance name\"/>\n                </Form.Group>\n                <Form.Group controlId=\"gallons_total\">\n                    <Form.Label as =\"h4\" >How many gallons in a single use?</Form.Label>\n                    <Form.Control style ={form} type=\"text\" value={this.state.gallons} onChange={this.handleGallonsChange} required placeholder=\"# of gallons\"/>\n                </Form.Group>\n                <Button onClick={() => this.setState({ submitted: true })}>\n                    Get QR code\n                </Button>\n            </Form>\n            </Card>\n        );\n    }\n}\nexport default QR;","import React, { Component } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Intro from \"./Intro\";\nimport Image from \"react-bootstrap/Image\";\nimport Graph from \"./Graph\";\nimport Logo from \"../Watered_Down_Logo.png\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Stats from \"./Stats\";\nimport QRForm from \"./QRForm\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\nconst style ={\n  height:\"50px\",\n  width: \"215px\"\n}\nvar routes = \n[\n    {\n      path: \"/\",\n      exact: true,\n      main: () => <Home />,\n    },\n    {\n      path: \"/Stats\",\n      main: () => <Tab1 />,\n    },\n    {\n      path: \"/AddNew\",\n      main: () => <Tab2 />,\n    },\n    {\n      path: \"/Graph\",\n      main: () => <Tab3 />,\n    },\n];\n\nfunction Home() \n{\n    return ( <Intro/>);\n}\nfunction Tab1() \n{\n    return ( <Stats userId={window.user_id}/>); \n}\nfunction Tab2() \n{\n    return ( <QRForm/>);\n}\nfunction Tab3() \n{ \n    return ( <Graph/>);\n}\n\nconst form ={\n    width: \"40em\",\n    'text-align':\"center\"\n}\nexport default class NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedin: false, user_id: \"\" };\n  }\n\n  render() {\n    document.title = 'Watered Down';\n    if (!this.state.loggedin) {\n      return (\n        <center>\n          <Card className='align-items-center' style={{ width: '50-rem', margin: '0 auto', float: 'none', 'margin-bottom': '10px'}}>\n            <Card.Header as=\"h3\">Login</Card.Header>\n            <Form as='form' id='login' onSubmit={() => this.setState({ loggedin: true })}>\n              <Form.Group controlId=\"user_id\">\n                <Form.Label as=\"h4\">Name</Form.Label>\n                <Form.Control style={form} type=\"text\" value={this.state.user_id} onChange={(event) => this.setState({ user_id: event.target.value })} required/>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label as=\"h4\">Password</Form.Label>\n                <Form.Control style={form} type=\"password\"/>\n              </Form.Group>\n              <Button type=\"submit\" onClick={() => window.user_id = this.state.user_id}>\n                Login\n              </Button>\n            </Form>\n          </Card>\n        </center>\n      );\n    }\n\n    return (\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\n        <div>\n          <Navbar>\n            <Navbar.Brand><Image src ={Logo} style ={style}/></Navbar.Brand>\n            <Nav>\n              <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n              <Nav.Link><Link to=\"/Stats\">View Water Use</Link></Nav.Link>\n              <Nav.Link><Link to=\"/AddNew\">Add Appliance</Link></Nav.Link>\n              <Nav.Link><Link to=\"/Graph\">Graph</Link></Nav.Link>\n            </Nav>\n          </Navbar>\n          <Switch>\n            <div style={{ paddingTop: 20 }}>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={<route.main />}\n                />\n              ))}\n            </div>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport './bootstrap.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar /> \n        Created for Minnehack 2021\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Intro.jsx","components/Graph.jsx","Watered_Down_Logo.png","gallon.png","components/Stats.jsx","components/QRForm.jsx","components/NavBar.jsx","App.js","registerServiceWorker.js","index.js"],"names":["styles","background","Intro","state","Jumbotron","style","Component","Simple","props","config","type","backgroundColor","borderWidth","borderColor","width","height","x","y","title","text","marginTop","marginLeft","fontColor","fontFamily","fontSize","fontWeight","shadow","textAlign","plot","tooltip","padding","borderRadius","animation","delay","effect","barWidth","hoverState","visible","plotarea","margin","scaleX","values","guide","item","paddingTop","itemsOverlap","lineColor","maxItems","offsetY","tick","scaleY","rules","lineWidth","rule","alpha","lineStyle","paddingRight","maxTicks","series","ref","this","chart","data","getData","url","a","fetch","response","json","Stats","isLoading","userId","userData","gallons","reduce","sum","rec","appliances","apps","includes","concat","galPerApp","map","app","tot","setState","Spinner","Array","e","i","Image","src","gallon","fluid","Accordion","val","idx","Card","Header","Toggle","as","eventKey","Collapse","Body","QR","id","facility","handleFacilityChange","bind","handleGallonsChange","handleSubmit","event","target","value","alert","preventDefault","Form","onSubmit","Group","controlId","Label","Control","onChange","required","Button","href","routes","path","exact","main","Home","Tab1","Tab2","Tab3","QRForm","Graph","NavigationBar","document","basename","process","Navbar","Brand","Logo","Nav","Link","to","route","index","children","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.afa01e6d.chunk.js","sourcesContent":["  \nimport React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nconst styles = {\n    background: \"#B6DCFE\"\n}\nclass Intro extends Component \n{\n    state = {  }\n    render() \n    { \n        return ( \n        <div>\n            <Jumbotron style = {styles}>\n                <h1 >Welcome to Watered Down!</h1>\n                <p>\n                Watered Down helps households meter their water usage. According to the EPA, the act of metering alone can reduce consumption by 20-40%.\n\nOur web-app allows users to easily print stickers to put on their water-consuming facilities like toilets, faucets, showers, and dishwashers. These stickers have a QR code which interfaces with our API to track the user's water usage whenever they are scanned. The web-app also comes with a dashboard to monitor the user's water usage visually.\n\n                </p>\n\n                <p>\n                     A Minnehack 2021 project by William Chan, Evan Tredal, Lynh Tran, and Nathaniel Budijono\n                </p>\n            </Jumbotron>\n        </div>\n         );\n    }\n}\nexport default Intro;","import React, { Component } from \"react\";\nimport \"zingchart/es6\";\nimport ZingChart from \"zingchart-react\";\n\nclass Simple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        type: 'bar',\n        backgroundColor: '#fff',\n        borderWidth: '5px',\n        borderColor: '#CDEDFD',\n        width: '96%',\n        height: '90%',\n        x: '2%',\n        y: '3%',\n      title: {\n        text: 'Water Usage Per Weekday by Gallons',\n        marginTop: '7px',\n        marginLeft: '20px',\n        backgroundColor: 'none',\n        fontColor: '#1B263B',\n        fontFamily: 'Arial',\n        fontSize: '20px',\n        fontWeight: 'bold',\n        shadow: false,\n        textAlign: 'left'\n      },\n      plot: {\n        tooltip: {\n          padding: '5px 10px',\n          backgroundColor: '#707e94',\n          borderRadius: '6px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '11px',\n          shadow: false\n        },\n        animation: {\n          delay: 500,\n          effect: 'ANIMATION_SLIDE_BOTTOM'\n        },\n        barWidth: '33px',\n        hoverState: {\n          visible: false\n        }\n      },\n      plotarea: {\n        margin: '45px 20px 38px 45px'\n      },\n      scaleX: {\n        values: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],\n        guide: {\n          visible: false\n        },\n        item: {\n          paddingTop: '2px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '15px'\n        },\n        itemsOverlap: true,\n        lineColor: '#d2dae2',\n        maxItems: 9999,\n        offsetY: '1px',\n        tick: {\n          lineColor: '#d2dae2',\n          visible: false\n        }\n      },\n      scaleY: {\n        values: '0:10000:500',\n        guide: {\n          rules: [\n            {\n              lineWidth: '0px',\n              rule: '%i == 0'\n            },\n            {\n              alpha: 0.4,\n              lineColor: '#d2dae2',\n              lineStyle: 'solid',\n              lineWidth: '1px',\n              rule: '%i > 0'\n            }\n          ]\n        },\n        item: {\n          paddingRight: '5px',\n          fontColor: '#1B263B',\n          fontFamily: 'Arial',\n          fontSize: '10px'\n        },\n        lineColor: 'none',\n        maxItems: 11,\n        maxTicks: 4,\n        tick: {\n          visible: false\n        }\n      },\n      series: [\n        {\n          values: [1500, 4650, 1730, 2001, 5805, 8905, 9602, 1050], \n          styles: [\n            {\n              backgroundColor: '#4dbac0'\n            },\n            {\n              backgroundColor: '#25a6f7'\n            },\n            {\n              backgroundColor: '#ad6bae'\n            },\n            {\n              backgroundColor: '#707d94'\n            },\n            {\n              backgroundColor: '#f3950d'\n            },\n            {\n              backgroundColor: '#e62163'\n            },\n            {\n              backgroundColor: '#4e74c0'\n            },\n            {\n              backgroundColor: '#9dc012'\n            }\n          ]\n        }\n      ]\n    },\n    }\n  }\n  render() {\n    return (\n      <div>\n        <ZingChart ref={this.chart} data={this.state.config} />\n      </div>\n    );\n  }\n}\n\nexport default Simple;\n","export default __webpack_public_path__ + \"static/media/Watered_Down_Logo.6d95c46e.png\";","export default __webpack_public_path__ + \"static/media/gallon.e4a1883c.png\";","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport gallon from '../gallon.png';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst styles = {\n  background: \"#B6DCFE\",\n}\nconst title = {\n  'font-size': \"2em\",\n}\nconst size = {\n  width: \"150px\",\n  height: \"150px\"\n}\n\nasync function getData(url) {\n\tconst response = await fetch(url);\n\treturn response.json()\n}\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n  }\n\n  async componentDidMount() {\n    const userData = await getData(`https://watered-down.zeet.app/api/user/${this.props.userId}`);\n    const gallons = userData.reduce((sum, rec) => sum + rec.gallons, 0);\n    const appliances = userData.reduce((apps, rec) => apps.includes(rec['application_id']) ? apps : apps.concat([rec['application_id']]), []);\n    const galPerApp = appliances.map((app) => userData.reduce((tot, rec) => rec['application_id']==app ? tot+rec['gallons'] : tot, 0));\n    this.setState({\n      gallons: gallons,\n      appliances: appliances,\n      galPerApp: galPerApp,\n      isLoading: false\n    });\n  }\n\n    render() { \n      if (this.state.isLoading) {\n        return <Spinner/>;\n      }\n        return ( \n          <div>\n            {[...Array(this.state.gallons),].map((e,i) =>{ \n              return <Image src= {gallon} fluid width = \"200\" height =\"300\"/>})}\n\n            <div style ={title}> Total Water Usage is {this.state.gallons} Gallons </div>\n            <h5> Select option below to view water usage for specific appliance: </h5>\n            <div>\n        <Accordion>\n            {this.state.appliances.map((val, idx) => {\n                return (\n                    <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as ={Card.Header} eventKey={val}> \n                            {val}\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={val}>\n                        <Card.Body>\n                            {[...Array(this.state.galPerApp[idx]),].map((e, i) =>{ \n                                return <Image src= {gallon} fluid width = \"200\" height =\"300\"/>})}\n                        </Card.Body>\n                    </Accordion.Collapse>\n                    </Card>\n            )})}\n        </Accordion>\n        </div>\n          </div> );\n    }\n}\nexport default Stats;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nclass QR extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            url: \"https://watered-down.zeet.app/api/record/\",\n            id: \"Evan\",\n            facility: \"\",\n            gallons: \"\"\n        };\n\n        this.handleFacilityChange = this.handleFacilityChange.bind(this);\n        this.handleGallonsChange = this.handleGallonsChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    handleFacilityChange(event) {\n        this.setState({facility: event.target.value});\n    }\n\n    handleGallonsChange(event) {\n        this.setState({gallons: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.facility);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Form as='form' id='rs' onSubmit={this.handleSubmit}>\n                <Form.Group controlId=\"appliance_id\">\n                    <Form.Label>Choose a name for your appliance</Form.Label>\n                    <Form.Control type=\"text\" value={this.state.facility} onChange={this.handleFacilityChange} required/>\n                </Form.Group>\n                <Form.Group controlId=\"gallons_total\">\n                    <Form.Label>How many gallons in a single use?</Form.Label>\n                    <Form.Control type=\"text\" value={this.state.gallons} onChange={this.handleGallonsChange} required/>\n                </Form.Group>\n                <Button type=\"submit\" href={`http://api.qrserver.com/v1/create-qr-code/?data=${this.state.url}?user_id=${this.state.id}%26application_id=${this.state.facility}%26gallons=${this.state.gallons}&size=200x200`}>\n                        Get QR Code\n                </Button>\n            </Form>\n        );\n    }\n}\nexport default QR;","import React, { Component } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Intro from \"./Intro\";\nimport Image from \"react-bootstrap/Image\";\nimport Graph from \"./Graph\";\nimport Logo from \"../Watered_Down_Logo.png\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Stats from \"./Stats\";\nimport QRForm from \"./QRForm\";\n\nconst style ={\n  height:\"50px\",\n  width: \"215px\"\n}\nvar routes = \n[\n    {\n      path: \"/\",\n      exact: true,\n      main: () => <Home />,\n    },\n    {\n      path: \"/Stats\",\n      main: () => <Tab1 />,\n    },\n    {\n      path: \"/AddNew\",\n      main: () => <Tab2 />,\n    },\n    {\n      path: \"/Graph\",\n      main: () => <Tab3 />,\n    },\n];\n\nfunction Home() \n{\n    return ( <Intro/>);\n}\nfunction Tab1() \n{\n    return ( <Stats userId=\"bob\"/>); \n}\nfunction Tab2() \n{\n    return ( <QRForm/>);\n}\nfunction Tab3() \n{ \n    return ( <Graph/>);\n}\n\nexport default function NavigationBar() {\n  document.title = 'Watered Down'\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div>\n        <Navbar>\n          <Navbar.Brand><Image src ={Logo} style ={style}/></Navbar.Brand>\n          <Nav>\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n            <Nav.Link><Link to=\"/Stats\">View Water Use</Link></Nav.Link>\n            <Nav.Link><Link to=\"/AddNew\">Add Appliance</Link></Nav.Link>\n            <Nav.Link><Link to=\"/Graph\">Graph</Link></Nav.Link>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <div style={{ paddingTop: 20 }}>\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </div>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport './bootstrap.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar /> \n        Created for Minnehack 2021\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}